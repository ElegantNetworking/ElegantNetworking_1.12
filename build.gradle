buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        //classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.9'
    }
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'
apply plugin: 'net.ltgt.apt'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.incremental = true // one flag, and things will get MUCH faster
}

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://files.minecraftforge.net/maven' }
    maven {
        name = "chickenbones"
        url = "https://maven.covers1624.net/" //"https://chickenbones.net/maven" //or https://maven.covers1624.net/
    }
}

configurations {
    extraLibs
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
    compileOnly fg.deobf("codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal")

    compile(project(':ElegantNetworkingCommon')) { transitive = false }
    extraLibs project(':ElegantNetworkingCommon')

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8', project(':ElegantNetworkingAnnotationProcessor')
}

compileJava {
    options.compilerArgs += [
            '-Aelegantnetworking.printDetails'
    ]
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    if (!testBuild) {
        exclude('hohserg/elegant/networking/test/**')
        exclude('META-INF/services/**')
        exclude('tmp_generated/**')
    }
    manifest {
        attributes([
                "Specification-Title"     : "elegant_networking",
                "Specification-Vendor"    : "elegant_networking",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "elegant_networking",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude('hohserg/elegant/networking/test/**')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    exclude('hohserg/elegant/networking/test/**')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { project.hasProperty("signing.keyId") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            repository(url: releasesRepoUrl/*'file://localhost/' + new File(project.getProjectDir(),'repo').getAbsolutePath()*/) {
                if (project.hasProperty("ossrhUsername"))
                    authentication userName: "$ossrhUsername", password: "$ossrhPassword"
            }

            pom.artifactId = 'elegant-networking-1.12'
            pom.project {
                name 'ElegantNetworking MinecraftForge 1.12 library'
                packaging 'jar'
                description 'This is a runtime library of ElegantNetworking for MinecraftForge 1.12'
                url 'https://github.com/ElegantNetworking/ElegantNetworkingRoot'

                scm {
                    connection = 'scm:git:https://github.com/ElegantNetworking/ElegantNetworking_1.12.git'
                    developerConnection = 'scm:git:git@github.com:https://github.com/ElegantNetworking/ElegantNetworking_1.12.git'
                    url = 'https://github.com/ElegantNetworking/ElegantNetworking_1.12'
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://raw.githubusercontent.com/ElegantNetworking/ElegantNetworking_1.12/master/LICENSE.md'
                    }
                }

                developers {
                    developer {
                        id = 'hohserg'
                        name = 'hohserg'
                        email = 'hohserg1@yandex.ru'
                    }
                }
            }
            pom.whenConfigured {
                p -> p.dependencies = []
            }
        }
    }
}
